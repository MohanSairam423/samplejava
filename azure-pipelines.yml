
stages:
- stage: One
  jobs:
  # Set an output variable from a deployment
  - job: A
    steps:
    - bash: echo "##vso[task.setvariable variable=myOutputVar;isOutput=true]this is the deployment variable value"
      name: setvarStep
    - bash: echo $(setvarStep.myOutputVar)
      name: echovar
    - task: Bash@3
      name: ChangeRegistration
      inputs:
        targetType: 'inline'
        script: |
          changeRegistration=$(curl -s -X POST https://devops.integration.user:devops@mohancli.service-now.com//api/sn_devops/v1/devops/orchestration/changeRegistration -H "Accept: application/json" | jq -r  '.result.changeNumber') 2>&1
          echo "${changeRegistration}"
          echo "##vso[task.setvariable variable=changeNumber;isOutput=true]$changeRegistration"

  # Map the variable from the job for the first slice
  - job: B
    dependsOn: A
    variables:
      myVarFromDeploymentJob: $[ dependencies.A.outputs['ChangeRegistration.changeNumber'] ]
    steps:
    - bash: "echo $(myVarFromDeploymentJob)"
      name: echovar

- stage: Two
  dependsOn: One
  jobs:
  # Set an output variable from a deployment
  - job: C
    variables:
      # map the output variable from A into this job
      varFromA: $[ stageDependencies.One.A.outputs['setvarStep.myOutputVar'] ]
    steps:
    - script: echo $(varFromA)

  # Map the variable from the job for the first slice
  - job: D
    dependsOn: C
    variables:
      myVarFromDeploymentJob: $[ stageDependencies.One.A.outputs['setvarStep.myOutputVar'] ]
    steps:
    - bash: "echo $(myVarFromDeploymentJob)"
      name: echovar